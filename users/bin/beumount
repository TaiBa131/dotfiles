#!/usr/bin/env python3
import subprocess, re, os, sys
from getpass import getuser

def umountusb():
    chosen=subprocess.Popen(f'{bemenucmd} -p "Choose USB device:"',shell=True,text=True,stdin=subprocess.PIPE,stdout=subprocess.PIPE).communicate(usbdrives)[0].strip()
    if chosen is None:
        exit ()
    umount=subprocess.run(f'sudo -A umount "{chosen}"',shell=True)
    if umount.returncode == 0:
        subprocess.run(f'notify-send "ðŸ’» USB unmounting" "{chosen} unmounted."',shell=True)
    else:
        subprocess.run(f'notify-send "â›” USB unmounting" "Failed to unmount {chosen}"',shell=True)

def umountandroid():
    chosen=subprocess.Popen(f'{bemenucmd} -p "Choose CD device:"',shell=True,text=True,stdin=subprocess.PIPE,stdout=subprocess.PIPE).communicate(anddrives)[0].strip()
    if chosen is None:
        exit ()
    umount=subprocess.run(f'sudo -A umount "{chosen}"',shell=True)
    if umount.returncode == 0:
        subprocess.run(f'notify-send "ðŸ¤– Android unmounting" "{chosen} unmounted."',shell=True)
    else:
        subprocess.run(f'notify-send "â›” Android unmounting" "Failed to unmount {chosen}"',shell=True)

def umountcd():
    chosen=subprocess.Popen(f'{bemenucmd} -p "Choose CD device:"',shell=True,text=True,stdin=subprocess.PIPE,stdout=subprocess.PIPE).communicate(cddrives)[0].strip()
    if chosen is None:
        exit ()
    umount=subprocess.run(f'sudo -A umount "{chosen}"',shell=True)
    if umount.returncode == 0:
        subprocess.run(f'notify-send "ðŸ’¿ CD unmounting" "{chosen} unmounted."',shell=True)
    else:
        subprocess.run(f'notify-send "â›” CD unmounting" "Failed to unmount {chosen}"',shell=True)

sys.path.append(os.path.expanduser("~") + '/.cache/wal')
from colorspython import *
bemenucmd = f'bemenu --tf "{background}" --fb "{background}" --hf "{background}" --nb "{background}" --sb "{background}" --scb "{background}" --tb "{foreground}" --ff "{foreground}" --nf "{foreground}" --hb "{foreground}" --sf "{foreground}" --scf "{foreground}" --fn "sans 9.5" -b --scrollbar auto -i'

anddrives=''
cddrives=''
f=open('/etc/mtab')
for line in f:
    if 'jmtpfs' in line:
            anddrives=anddrives + line.split()[1] +'\n'
    elif 'sr0' in line:
            cddrives=cddrives + line.split()[1] +'\n'
f.close()

usbdrives=subprocess.check_output('lsblk -nrpo "mountpoint"',shell=True,text=True)
usbdrives=re.sub('^(|\/|\[SWAP\])$\n','',usbdrives,flags=re.M)

drives=''
if anddrives != '':
    drives=drives+'Android\n'
if cddrives != '':
    drives=drives+'CD\n'
if usbdrives != '':
    drives=drives+'USB\n'

number = len(drives.split())
if number == 0:
    subprocess.run('notify-send "Nothing to unmount"',shell=True)
elif number == 1:
    if drives.strip() == 'USB':
        umountusb()
    elif drives.strip() == 'Android':
        umountandroid()
    elif drives.strip() == 'CD':
        umountcd()
else:
    driveType=subprocess.Popen(f'{bemenucmd} -p "Choose device type to unmount:"',shell=True,text=True,stdin=subprocess.PIPE,stdout=subprocess.PIPE).communicate(drives)[0].strip()
    if driveType == 'USB':
        umountusb()
    elif driveType == 'Android':
        umountandroid()
    elif driveType == 'CD':
        umountcd()
