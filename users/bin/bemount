#!/bin/sh
# Gives a bemenu prompt to mount unmounted drives.
# If they're in /etc/fstab, they'll be mounted automatically.
# Otherwise, you'll be prompted to give a mountpoint from already existsing directories.
# If you input a novel directory, it will prompt you to create that directory.



let a=$(jmtpfs -l | wc -l)-2

#. "${HOME}/.cache/wal/colors.sh"
#alias dmenu='dmenu -nb "$background" -nf "$foreground" -sb "$foreground" -sf "$background"'

. "${HOME}/.cache/wal/colors.sh"
alias bemenu='bemenu --tf "$background" --fb "$background" --hf "$background" --nb "$background" --sb "$background" --scb "$background" --tb "$foreground" --ff "$foreground"  --nf "$foreground"  --hb "$foreground"  --sf "$foreground"  --scf "$foreground" --fn "sans 9.5" -b --scrollbar auto'

getmount() { \
	[ -z "$chosen" ] && exit 1
	mp="$(find $1 | bemenu -i -p "Type in mount point.")"
	[ "$mp" = "" ] && exit 1
	if [ ! -d "$mp" ]; then
		mkdiryn=$(printf "No\\nYes" | bemenu -i -p "$mp does not exist. Create it?")
		[ "$mkdiryn" = "Yes" ] && (mkdir -p "$mp" || sudo -A mkdir -p "$mp")
	fi
	}

mountusb() { \
	chosen="$(echo "$usbdrives" | bemenu -i -p "Mount which drive?" | awk '{print $1}')"
	sudo -A mount "$chosen" && notify-send "ðŸ’» USB mounting" "$chosen mounted." && exit 0
	alreadymounted=$(lsblk -nrpo "name,type,mountpoint" | awk '$2=="part"&&$3!~/\/boot|\/home$|SWAP/&&length($3)>1{printf "-not \( -path *%s -prune \) \ \n",$3}')
	getmount "/mnt /media /mount /home -maxdepth 5 -type d $alreadymounted"
	partitiontype="$(lsblk -no "fstype" "$chosen")"
	case "$partitiontype" in
		"vfat") sudo -A mount -t vfat "$chosen" "$mp" -o rw,umask=0000;;
		*) sudo -A mount "$chosen" "$mp"; user="$(whoami)"; ug="$(groups | awk '{print $1}')"; sudo -A chown "$user":"$ug" 741 "$mp";;
	esac
	notify-send "ðŸ’» USB mounting" "$chosen mounted to $mp."
	}

mountandroid() { \
	chosen=$(echo "$anddrives" | bemenu -i -p "Which Android device?" | awk '{print $1 $2}' | sed 's/,$//' )
	bus=$(echo "$chosen" | sed 's/,.*//' )
	getmount "$HOME -maxdepth 3 -type d"
	sudo jmtpfs -device="$chosen" -o allow_other "$mp"
	echo "OK" | bemenu -i -p "Press (Allow) file transfer on your phone screen"
	newchosen=$(jmtpfs -l | tail -n $a | grep "$bus" | awk '{print $1 $2}' | sed 's/,$//' )
	echo "this is $newchosen"
	sudo umount "$mp"
	sudo jmtpfs -device="$newchosen" -o allow_other "$mp"
	notify-send "ðŸ¤– Android Mounting" "Android device mounted to $mp."
	}

mountcd() { \
	chosen="$(echo "$cddrives" | bemenu -i -p "Mount which cd?")"
	getmount "$HOME -maxdepth 3 -type d"
	sudo -A mount "$chosen" "$mp" && notify-send "ðŸ’¿ CD mounting" "$chosen mounted." && exit 0
	}

asktype() { \
	case $(printf "$drives" | bemenu -i -p "Mount which drive?") in
		USB) mountusb ;;
		Android) mountandroid ;;
		CD) mountcd ;;
	esac
	}

anddrives=$([ "$a" -ge 0 ] && jmtpfs -l 2>/dev/null | tail -n $a)
usbdrives="$(lsblk -rpo "name,type,size,mountpoint" | awk '$2=="part"&&$4==""{printf "%s (%s)\n",$1,$3}')"
cddrives="$(blkid /dev/sr0 | awk '{print $1}' | sed 's/://')"

drives=$([ ! -z "$usbdrives" ] && echo -n "USB\n"; [ ! -z "$cddrives" ] && echo -n "CD\n"; [ ! -z "$anddrives" ] && echo -n "Android\n")
case $(printf "$drives" | wc -l) in
	0) notify-send "No USB drive or Android device or CD detected" ;;
	1) case $(printf "$drives") in
		USB) mountusb ;;
		Android) mountandroid ;;
		CD) mountcd ;;
	   esac ;;
	*) asktype;;
esac
