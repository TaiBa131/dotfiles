#!/usr/bin/env python3
import sys, subprocess, os, logging, re

FNULL = open(os.devnull, 'w')
HOME=os.path.expanduser('~')


def setuplogging():
    logging.basicConfig(format=("[%(levelname)s\033[0m] "
                                "\033[1;31m%(module)s\033[0m: "
                                "%(message)s"),
                        level=logging.INFO,
                        stream=sys.stdout)
    logging.addLevelName(logging.INFO, '\033[1;32mI')


def extracolor(type):
    rgb=list(int(background.strip('#')[i:i+2], 16) for i in (0, 2, 4))
    if type=='light':
        for i in range(0,3):
            rgb[i]=rgb[i]-35
    else:
        for i in range(0,3):
            rgb[i]=rgb[i]+35
    extra='#{:02x}{:02x}{:02x}'.format(rgb[0],rgb[1],rgb[2])
    f=open(f'{HOME}/.cache/wal/colors.Xresources','a')
    f.write(f'*lighter :{extra}\n')
    f.close()
    f=open(f'{HOME}/.cache/wal/colorspython.py','a')
    f.write(f'color16=\'{extra}\'\n')
    f.close()


setuplogging()

cmd=sys.argv
cmd.remove(cmd[0])
if '-l' in cmd:
    cmd.remove('-l')
    args='-l'
    type='light'
else:
    args=''
    type='dark'
if '--theme' in cmd:
    theme=cmd[cmd.index('--theme')+1]
    if theme is None:
        logging.info('No theme set')
        exit()
    args=f'--theme {theme}'
    if type=='light':
        args='-l '+args
elif '-r' in cmd:
    if type=='light':
        args='--theme random_light'
    else:
        args='--theme random_dark'
elif len(cmd) > 0:
    wallpaper=cmd[0]
    args=f'-i {wallpaper} '+args
else:
    wallpaper=subprocess.check_output('sxiv -obqft ~/pix/wallpapers/*',shell=True,text=True).strip().split()[0]
    if wallpaper is None:
        logging.info('No wallpaper set')
        exit()
    args=f'-i {wallpaper} '+args

process=subprocess.run(f'wal -e {args}',shell=True)
if process.returncode != 0:
    exit()

sys.path.append(f'{HOME}/.cache/wal')
from colorspython import *


extracolor(type)

f=open(f'{HOME}/.cache/wal/args','w')
f.write(f'{args}\n')
f.close()

subprocess.run(['xrdb',f'{HOME}/.cache/wal/colors.Xresources'])
subprocess.Popen(['i3-msg','-q','reload'])
logging.info('Reloading i3')

os.rename(f'{HOME}/.cache/wal/zathuracolors',f'{HOME}/.config/zathura/zathuracolors')
logging.info('Reloaded zathura colors')

if subprocess.run(['pgrep','qutebrowser'],stdout=FNULL,stderr=FNULL).returncode == 0:
    subprocess.Popen(['qutebrowser',':pywal'],stdout=FNULL,stderr=FNULL)
    logging.info('Reloading qutebrowser')

subprocess.Popen(['startdunst'],stdout=FNULL,stderr=FNULL)
logging.info('Reloading dunst')

subprocess.Popen(['startalttab'],stdout=FNULL,stderr=FNULL)
logging.info('Reloading altab')

if wallpaper == 'None':
    f=open(f'{HOME}/.fehbg','r')
    wallpaper=f.readlines()[1]
    wallpaper=re.sub('.+ \'(.+)\' \n',r'\1',wallpaper)
    f.close()
    f=open(f'{HOME}/.cache/wal/colorspython.py','a')
    f.write(f'wallpaper=\'{wallpaper}\'\n')
    f.close()
else:
    imagemagickcommand = f'convert {wallpaper} -resize "1366^x768" -crop 1366x768+0+0 {HOME}/.config/i3/lockicon.png -gravity center -composite -matte {HOME}/.config/i3/suspendscreen.jpg'
    subprocess.run(imagemagickcommand,shell=True)
    logging.info('Reloaded suspend screen')
